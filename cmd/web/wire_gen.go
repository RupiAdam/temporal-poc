// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/gin-gonic/gin"
	"temporal-poc/internal/delivery/http"
	"temporal-poc/internal/delivery/http/route"
	"temporal-poc/internal/helper"
	"temporal-poc/internal/usecase"
)

// Injectors from wire.go:

func InitDependencies(r *gin.Engine) (*Handlers, error) {
	healthcheckController := http.NewHealthcheckController()
	imageProcessingHelper := helper.NewImageProcessingHelper()
	userUsecase := usecase.NewUserUsecase(imageProcessingHelper)
	userController := http.NewUserController(userUsecase)
	routeConfig := route.NewRouteConfig(r, healthcheckController, userController)
	handlers := &Handlers{
		Route:                 routeConfig,
		HealthcheckController: healthcheckController,
		UserController:        userController,
	}
	return handlers, nil
}

// wire.go:

type Handlers struct {
	Route                 *route.RouteConfig
	HealthcheckController *http.HealthcheckController
	UserController        *http.UserController
}
